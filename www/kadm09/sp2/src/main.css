/*
color scheme

#EEE -- pure white as a default
#888 -- grey for creating less brigh backdrop when needed
#313154 -- for texts as a contrast color 
#C39E68 -- gold, accent
#B1361E -- darkred, accent
#6795DE -- lightblue, accent

font-family: 'montserrat', sans-serif;
-available in Vue by default, reasonably pleasing, often cited as good combination
*/

/* Defines color scheme for use in App, take note that most of the stylings
uses var() construct for quick manipulation of the whole style */
:root {
	--primary: #B1361E;
	--secondary: #6795DE;
	--auxiliary: #c39e68;
	--light: #EEE;
	--grey: #888;
	--dark: #313154;

	--shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
	--primary-glow: 0px 0px 4px rgba(234, 64, 92, 0.75);
	--secondary-glow: 0px 0px 4px rgba(58, 130, 238, 0.75);
	--auxiliary-glow: 0px 0px 4px rgba(195, 158, 104, 0.75);
}

/* Global definition block, sets the core attributes and suppresses undesirable 
stylings. Sets default section margins and heading styles */
* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	font-family: 'montserrat', sans-serif;
}

input:not([type="radio"]):not([type="checkbox"]), button {
	appearance: none;
	border: none;
	outline: none;
	background: none;
	cursor: initial;
}

body {
	background: var(--light);
	color: var(--dark);
}

section {
	margin-top: 2rem;
	margin-bottom: 2rem;
	padding-left: 1.5rem;
	padding-right: 1.5em;
}

h3 {
	color: var(--dark); 
	font-size: 1rem;
	font-weight: 400;
	margin-bottom: 0.5rem;
}

h4 {
	color: var(--dark);
	font-size: 0.875rem;
	font-weight: 700;
	margin-bottom: 0.5rem;
}


/* Stylings for the upper "greetings" bar + for google auth buttons */
.greeting {
	display: flex;
}

.greeting-buttons {
	margin-left:auto;
}

.greeting .title {
	display: flex;
}

.greeting .title input {
	margin-left: 0.5rem;
	flex: 1 1 0%;
	min-width: 0;
}

.greeting .title,
.greeting .title input {
	color: var(--dark);
	font-size: 1.5rem;
	font-weight: 700;
}

.button-login, .button-logout {
	padding: 5px;
	margin-left: 3px;
	border-radius: 5px;
	background-color: var(--secondary);
	color: var(--light);
	cursor: pointer;
}

.button-logout {
	background-color: var(--primary);
}

.main-wrapper {
	display: flex;
	gap: 10px;
	max-height: 600px;
}

.column-form {
	width: 30%;
	min-width: 300px;
}

.column-content {
	width: 65%;
}

.column-content-todos {
	max-height: 500px;
	overflow-y: auto;
}

/* Create todo section stylings */
.create-todo input[type="text"] {
	display: block;
	width: 100%;
	font-size: 1.125rem;
	padding: 1rem 1.5rem;
	color: var(--dark);
	background-color: #FFF;
	border-radius: 0.5rem;
	box-shadow: var(--shadow);
	margin-bottom: 1.5rem;
}

/* sets a rudimentary grid for labels to exist within */
.create-todo .options {
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	grid-gap: 1rem;
	margin-bottom: 1.5rem;
}

/* Creates a new row with diffent sizings than the category labels,
this is done to better utilise space on the page */
.create-todo-row {
	display: grid;
	grid-template-columns: repeat(2, 1fr);
	grid-gap: 2rem;
	margin-bottom: 1rem;
}


.create-todo .options label {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	padding: 1.5rem;
	background-color: #FFF;
	border-radius: 0.5rem;
	box-shadow: var(--shadow);
	cursor: pointer;
}

input[type="radio"],
input[type="checkbox"] {
	display: none;
}

/* Take note that individual labels holding the bubbles
use several classes at once to achieve final style, particulary in relation
to color coding them. */
.bubble {
	display: flex;
	align-items: center;
	justify-content: center;
	width: 20px;
	height: 20px;
	border-radius: 50%;
	border: 2px solid var(--secondary);
	box-shadow: var(--secondary-glow);
}

.bubble.primary {
	border-color: var(--primary);
	box-shadow: var(--primary-glow);
}

.bubble.secondary {
	border-color: var(--secondary);
	box-shadow: var(--secondary-glow);
}

.bubble.auxiliary {
	border-color: var(--auxiliary);
	box-shadow: var(--auxiliary-glow);
}

.bubble::after {
	content: "";
	display: block;
	opacity: 0;
	width: 0px;
	height: 0px;
	background-color: var(--secondary);
	box-shadow: var(--secondary-glow);
	border-radius: 50%;
	transition: 0.2s ease-in-out;
}

.bubble.primary::after {
	background-color: var(--primary);
	box-shadow: var(--primary-glow);
}

.bubble.auxiliary::after {
	background-color: var(--auxiliary);
	box-shadow: var(--auxiliary-glow);
}

/* styles the workstation picker */
.dropdown-selector {
	background-color: white;
	border-radius: 5px;
	padding: 3px;
	margin: 3px;
}

/* styles the due date picker */
.datepicker-wrapper {
	background-color: white;
	border-radius: 5px;
	padding: 3px;
	margin: 3px;
	width: fit-content;
}

/* take note that dateswapper is used in todolist itself
 enforces max width to prevent the "calendar" logo from spanning all over the list */
.dateswapper {
	width: fit-content;
	max-width: 150px;
}

/* This construct is needed to properly code and "fill" the 
radio button instead of default radio button behavior */
input:checked ~ .bubble::after {
	width: 10px;
	height: 10px;
	opacity: 1;
}

.create-todo .options label div {
	color: var(--dark);
	font-size: 1.125rem;
	margin-top: 1rem;
}

.create-todo input[type="submit"] {
	display: block;
	width: 100%;
	font-size: 1.125rem;
	padding: 1rem 1.5rem;
	color: #FFF;
	background-color: var(--primary);
	border-radius: 0.5rem;
	box-shadow: var(--primary-glow);
	cursor: pointer;
	transition: 0.2s ease-in-out;
}

.create-todo input[type="submit"]:hover {
	opacity: 0.75;
}


/* Styles for the todo list section */
.todo-list .list {
	margin: 1rem 0;
} 

.todo-list .todo-item {
	display: flex;
	align-items: center;
	background-color: #FFF;
	padding: 1rem;
	border-radius: 0.5rem;
	box-shadow: var(--shadow);
	margin-bottom: 1rem;
	margin-right: 10px;
}

.todo-item label {
	display: block;
	margin-right: 1rem;
	cursor: pointer;
}

.todo-item .todo-content {
	flex: 1 1 0%;
}

.todo-item .todo-content input {
	color: var(--dark);
	font-size: 1.125rem;
    width: 100%;
}

.todo-item .actions {
	display: flex;
	align-items: center;
}

.todo-item .actions button {
	display: block;
	padding: 0.5rem;
	border-radius: 0.25rem;
	color: #FFF;
	cursor: pointer;
	transition: 0.2s ease-in-out;
}

.todo-item .actions button:hover {
	opacity: 0.75;
}

.todo-item .actions .edit {
	margin-right: 0.5rem;
	background-color: var(--primary);
}

.todo-item .actions button{
	margin-left: 5px;
}

.todo-item .actions .button-delete {
	background-color: var(--primary);
}

.todo-item .actions .button-calendar-sync {
	background-color: var(--secondary);
}

/* This construct ensures that item elements are not interactive
 when item is checked off as done (as well as providing a visual indication such thing is going on  */
.todo-item.done .todo-content input,.todo-item.done .todo-content .todo-item-selector,.todo-item.done .button-calendar-sync {
	text-decoration: line-through;
	color: var(--grey);
	cursor: not-allowed;    
	pointer-events: none;
}

/* Overrides stylings on the interactive parts of the todo item to suppress "form"
look */
.todo-item-selector {
	display: block;
	appearance: none;
	border: none;
	outline: none;
	background: none;
	cursor: initial;
	font-size: 1rem;
}

/* Adds a indication on hover that element can be changed (take note that dateswapper and todo.content
provide this by default via A, changes to the cursor and B, highlighting the icon on hover */
.todo-item-selector:hover {
	text-decoration: underline;
	cursor: pointer;
}